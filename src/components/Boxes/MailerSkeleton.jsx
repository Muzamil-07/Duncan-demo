/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 mailer-box.gltf 
*/

import React, { useEffect, useRef, useState } from 'react';
import { useGraph } from '@react-three/fiber';
import { useGLTF, useAnimations } from '@react-three/drei';
import { SkeletonUtils } from 'three-stdlib';
import { preloadMaterialTextures, preloadPrintTextures } from '../../lib/utils';
import { useAppSelector } from '../../lib/store/hooks';
import { selectBoxState } from '../../lib/store/features/box/boxSlice';
import { LoopOnce } from 'three';

export function MailerBoxSkeleton(props) {
  const group = React.useRef();
  const { scene, animations } = useGLTF(
    '/assets/models/mailer/mailer-box.gltf'
  );
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  const boxState = useAppSelector(selectBoxState);
  // ******** ANIMATION SCRIPT
  useEffect(() => {
    if (boxState === 'open') {
      actions.Animation.setLoop(LoopOnce);
      actions.Animation.clampWhenFinished = true;
      actions.Animation.timeScale = 1;
      actions.Animation.reset().play();
    } else if (boxState === 'close') {
      actions.Animation.setLoop(LoopOnce);
      actions.Animation.clampWhenFinished = true;
      actions.Animation.timeScale = -1;
      actions.Animation.paused = false;
    }
  }, [boxState, actions.Animation]);

  useEffect(() => {
    setTimeout(() => {
      console.log('SETTIMEOUT DONE----------------------');
      preloadMaterialTextures();
      preloadPrintTextures();
    }, 0);
    console.log('DONE----------------------');
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature001" rotation={[Math.PI, 0, Math.PI]}>
          <primitive object={nodes.Bone008} />
          <primitive object={nodes.neutral_bone} />
          <group name="material_print001">
            <skinnedMesh
              castShadow
              name="outside"
              geometry={nodes.material_print001_1.geometry}
              material={materials.Material_color_outside}
              skeleton={nodes.material_print001_1.skeleton}
            ></skinnedMesh>
            <skinnedMesh
              castShadow
              name="inside"
              geometry={nodes.material_print001_2.geometry}
              material={materials.Material_color_inside}
              skeleton={nodes.material_print001_2.skeleton}
            ></skinnedMesh>
            <skinnedMesh
              castShadow
              name="side"
              geometry={nodes.material_print001_3.geometry}
              material={materials.Material_side}
              skeleton={nodes.material_print001_3.skeleton}
            ></skinnedMesh>
            <skinnedMesh
              castShadow
              name="gold_foil"
              geometry={nodes.material_print001_4.geometry}
              material={materials.finishing_gold_foil}
              skeleton={nodes.material_print001_4.skeleton}
              material-transparent={true}
              material-opacity={0}
            />
            <skinnedMesh
              castShadow
              name="spot_gloss"
              geometry={nodes.material_print001_5.geometry}
              material={materials.finishing_spot_gloss}
              skeleton={nodes.material_print001_5.skeleton}
              material-transparent={true}
              material-opacity={0}
            />{' '}
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/assets/models/mailer/mailer-box.gltf');
